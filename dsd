[1mdiff --git a/Mark_IV/Limit_Switches/Limit_Switches.py b/Mark_IV/Limit_Switches/Limit_Switches.py[m
[1mindex d633f4e..3e67b4b 100644[m
[1m--- a/Mark_IV/Limit_Switches/Limit_Switches.py[m
[1m+++ b/Mark_IV/Limit_Switches/Limit_Switches.py[m
[36m@@ -38,10 +38,10 @@[m [mclass limitSwitches:[m
         return self.limitLogic(21)[m
 [m
     def motory1(self):[m
[31m-        return self.limitLogic(18)[m
[32m+[m[32m        return self.limitLogic(24)[m
 [m
     def motory2(self):[m
         return self.limitLogic(12)[m
 [m
     def elevation(self):[m
[31m-        return self.limitLogic(17)[m
[32m+[m[32m        return self.limitLogic(25)[m
[1mdiff --git a/Mark_IV/Motors/x-axis.py b/Mark_IV/Motors/x-axis.py[m
[1mindex 5a02b5c..a7f2e13 100644[m
[1m--- a/Mark_IV/Motors/x-axis.py[m
[1m+++ b/Mark_IV/Motors/x-axis.py[m
[36m@@ -14,9 +14,9 @@[m [mls = limitSwitches()[m
 def xMovement():[m
     # Direction pin from controller[m
     GPIO.cleanup()[m
[31m-    DIR_1 = 6  # DIR+[m
[32m+[m[32m    DIR_1 = 13  # DIR+[m
     # Step pin from controller[m
[31m-    STEP_1 = 5  # PULL+[m
[32m+[m[32m    STEP_1 = 20  # PULL+[m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = 0[m
     CCW = 1[m
[1mdiff --git a/Mark_IV/Motors/x-yforward.py b/Mark_IV/Motors/x-yforward.py[m
[1mindex 4b87298..8a0aa91 100644[m
[1m--- a/Mark_IV/Motors/x-yforward.py[m
[1m+++ b/Mark_IV/Motors/x-yforward.py[m
[36m@@ -15,16 +15,16 @@[m [mls = limitSwitches()[m
 def Movement():[m
     # Direction pin from controller[m
     GPIO.cleanup()[m
[31m-    xDIR_1 = 6  # DIR+[m
[31m-    xDIR_2 = 22  # DIR+[m
[32m+[m[32m    xDIR_1 = 13  # DIR+[m
[32m+[m[32m    # xDIR_2 = 22  # DIR+ ?[m
     # Step pin from controller[m
[31m-    xSTEP_1 = 5  # PULL+[m
[31m-    xSTEP_2 = 23  # PULL+[m
[31m-    yDIR_1 = 19  # DIR+[m
[31m-    yDIR_2 = 25  # DIR+[m
[32m+[m[32m    xSTEP_1 = 20  # PULL+[m
[32m+[m[32m    # xSTEP_2 = 23  # PULL+ ?[m
[32m+[m[32m    yDIR_1 = 26  # DIR+[m
[32m+[m[32m    # yDIR_2 = 25  # DIR+ ?[m
     # Step pin from controller[m
[31m-    ySTEP_1 = 20  # PULL+[m
[31m-    ySTEP_2 = 24  # PULL+[m
[32m+[m[32m    ySTEP_1 = 19  # PULL+[m
[32m+[m[32m    # ySTEP_2 = 24  # PULL+ ?[m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = 0[m
     CCW = 1[m
[36m@@ -34,7 +34,7 @@[m [mdef Movement():[m
     GPIO.setmode(GPIO.BCM)[m
     xmotor1_switch = 27[m
     xmotor2_switch = 21[m
[31m-    ymotor1_switch = 18[m
[32m+[m[32m    ymotor1_switch = 24[m
     ymotor2_switch = 12[m
     GPIO.setup(xmotor1_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
     GPIO.setup(xmotor2_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
[36m@@ -47,21 +47,21 @@[m [mdef Movement():[m
     # Establish Pins in software[m
     GPIO.setup(xDIR_1, GPIO.OUT)[m
     GPIO.setup(xSTEP_1, GPIO.OUT)[m
[31m-    GPIO.setup(xDIR_2, GPIO.OUT)[m
[31m-    GPIO.setup(xSTEP_2, GPIO.OUT)[m
[32m+[m[32m    # GPIO.setup(xDIR_2, GPIO.OUT)[m
[32m+[m[32m    # GPIO.setup(xSTEP_2, GPIO.OUT)[m
 [m
     # Set the first direction you want it to spin[m
     GPIO.output(xDIR_1, CW)[m
[31m-    GPIO.output(xDIR_2, CW)[m
[32m+[m[32m    # GPIO.output(xDIR_2, CW)[m
 [m
     GPIO.setup(yDIR_1, GPIO.OUT)[m
     GPIO.setup(ySTEP_1, GPIO.OUT)[m
[31m-    GPIO.setup(yDIR_2, GPIO.OUT)[m
[31m-    GPIO.setup(ySTEP_2, GPIO.OUT)[m
[32m+[m[32m    # GPIO.setup(yDIR_2, GPIO.OUT)[m
[32m+[m[32m    # GPIO.setup(ySTEP_2, GPIO.OUT)[m
 [m
     # Set the first direction you want it to spin[m
     GPIO.output(yDIR_1, CW)[m
[31m-    GPIO.output(yDIR_2, CW)[m
[32m+[m[32m    # GPIO.output(yDIR_2, CW)[m
 [m
     # CW Away from limit switch[m
     try:[m
[36m@@ -73,18 +73,18 @@[m [mdef Movement():[m
 [m
                 # Set one coil winding to high[m
                 GPIO.output(xSTEP_1, GPIO.HIGH)[m
[31m-                GPIO.output(xSTEP_2, GPIO.HIGH)[m
[32m+[m[32m                # GPIO.output(xSTEP_2, GPIO.HIGH)[m
                 GPIO.output(ySTEP_1, GPIO.HIGH)[m
[31m-                GPIO.output(ySTEP_2, GPIO.HIGH)[m
[32m+[m[32m                # GPIO.output(ySTEP_2, GPIO.HIGH)[m
                 # Allow it to get there.[m
                 # .5 == super slow[m
                 # .00005 == breaking[m
                 sleep(0.005)  # Dictates how fast stepper motor will run[m
                 # Set coil winding to low[m
                 GPIO.output(xSTEP_1, GPIO.LOW)[m
[31m-                GPIO.output(xSTEP_2, GPIO.LOW)[m
[32m+[m[32m                # GPIO.output(xSTEP_2, GPIO.LOW)[m
                 GPIO.output(ySTEP_1, GPIO.LOW)[m
[31m-                GPIO.output(ySTEP_2, GPIO.LOW)[m
[32m+[m[32m                # GPIO.output(ySTEP_2, GPIO.LOW)[m
                 sleep(0.005)  # Dictates how fast stepper motor will run[m
 [m
     # Once finished clean everything up[m
[1mdiff --git a/Mark_IV/Motors/xhoming.py b/Mark_IV/Motors/xhoming.py[m
[1mindex 1b162eb..b4e7397 100644[m
[1m--- a/Mark_IV/Motors/xhoming.py[m
[1m+++ b/Mark_IV/Motors/xhoming.py[m
[36m@@ -14,8 +14,8 @@[m [mls = limitSwitches()[m
 def xHoming():[m
     # Direction pin from controller[m
     GPIO.cleanup()[m
[31m-    DIR_1 = 6  # DIR+[m
[31m-    STEP_1 = 5  # PULL+[m
[32m+[m[32m    DIR_1 = 13  # DIR+[m
[32m+[m[32m    STEP_1 = 20  # PULL+[m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = 0[m
     CCW = 1[m
[1mdiff --git a/Mark_IV/Motors/y-axis.py b/Mark_IV/Motors/y-axis.py[m
[1mindex 0d1fb4c..e4b9583 100644[m
[1m--- a/Mark_IV/Motors/y-axis.py[m
[1m+++ b/Mark_IV/Motors/y-axis.py[m
[36m@@ -14,10 +14,10 @@[m [mls = limitSwitches()[m
 def yMovement():[m
     # Direction pin from controller[m
     GPIO.cleanup()[m
[31m-    DIR_1 = 19  # DIR+[m
[32m+[m[32m    DIR_1 = 26  # DIR+[m
     # DIR_2 = 25 #DIR+[m
     # Step pin from controller[m
[31m-    STEP_1 = 20  # PULL+[m
[32m+[m[32m    STEP_1 = 19  # PULL+[m
     # STEP_2 = 24 #PULL+[m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = 0[m
[36m@@ -26,7 +26,7 @@[m [mdef yMovement():[m
     flag = 0[m
 [m
     GPIO.setmode(GPIO.BCM)[m
[31m-    motor1_switch = 18[m
[32m+[m[32m    motor1_switch = 24[m
     motor2_switch = 12[m
     GPIO.setup(motor1_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
     GPIO.setup(motor2_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
[1mdiff --git a/Mark_IV/Motors/yhoming.py b/Mark_IV/Motors/yhoming.py[m
[1mindex 7f32c45..7b093b5 100644[m
[1m--- a/Mark_IV/Motors/yhoming.py[m
[1m+++ b/Mark_IV/Motors/yhoming.py[m
[36m@@ -10,8 +10,8 @@[m [mdef yHoming():[m
 [m
     GPIO.cleanup()[m
 [m
[31m-    DIR_1 = 19  # DIR+[m
[31m-    STEP_1 = 20  # PULL+[m
[32m+[m[32m    DIR_1 = 26  # DIR+[m
[32m+[m[32m    STEP_1 = 19  # PULL+[m
 [m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = 0[m
[36m@@ -23,7 +23,7 @@[m [mdef yHoming():[m
     motor2_flag = 0[m
 [m
     GPIO.setmode(GPIO.BCM)[m
[31m-    motor1_switch = 18[m
[32m+[m[32m    motor1_switch = 24[m
     motor2_switch = 12[m
     GPIO.setup(motor1_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
     GPIO.setup(motor2_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
[1mdiff --git a/Mark_IV/Sintering/axisReset.py b/Mark_IV/Sintering/axisReset.py[m
[1mindex 742c4e8..02f5ebc 100644[m
[1m--- a/Mark_IV/Sintering/axisReset.py[m
[1m+++ b/Mark_IV/Sintering/axisReset.py[m
[36m@@ -55,8 +55,8 @@[m [mclass axis_reset:[m
         GPIO.setwarnings(False)[m
         GPIO.cleanup()[m
 [m
[31m-        DIR_1 = 6  # DIR+[m
[31m-        STEP_1 = 5  # PULL+[m
[32m+[m[32m        DIR_1 = 13  # DIR+[m
[32m+[m[32m        STEP_1 = 20  # PULL+[m
 [m
         # 0/1 used to signify clockwise or counterclockwise.[m
         CW = 0[m
[36m@@ -124,8 +124,8 @@[m [mclass axis_reset:[m
         GPIO.setwarnings(False)[m
         GPIO.cleanup()[m
 [m
[31m-        DIR_1 = 19  # DIR+[m
[31m-        STEP_1 = 20  # PULL+[m
[32m+[m[32m        DIR_1 = 26  # DIR+[m
[32m+[m[32m        STEP_1 = 19  # PULL+[m
 [m
         # 0/1 used to signify clockwise or counterclockwise.[m
         CW = 0[m
[36m@@ -137,7 +137,7 @@[m [mclass axis_reset:[m
         motor2_flag = 0[m
 [m
         GPIO.setmode(GPIO.BCM)[m
[31m-        motor1_switch = 18[m
[32m+[m[32m        motor1_switch = 24[m
         motor2_switch = 12[m
         GPIO.setup(motor1_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
         GPIO.setup(motor2_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)[m
[1mdiff --git a/Mark_IV/Sintering/azimuthTracking.py b/Mark_IV/Sintering/azimuthTracking.py[m
[1mindex b42b1db..4114908 100644[m
[1m--- a/Mark_IV/Sintering/azimuthTracking.py[m
[1m+++ b/Mark_IV/Sintering/azimuthTracking.py[m
[36m@@ -18,8 +18,8 @@[m [mclass azimuth_tracker:[m
         GPIO.setwarnings(False)[m
         GPIO.cleanup()[m
 [m
[31m-        DIR_1 = 13  # DIR+[m
[31m-        STEP_1 = 26  # PULL+[m
[32m+[m[32m        DIR_1 = 25  # DIR+[m
[32m+[m[32m        STEP_1 = 24  # PULL+[m
 [m
         # 0/1 used to signify clockwise or counterclockwise.[m
         CW = direction[m
[36m@@ -130,8 +130,8 @@[m [mclass azimuth_tracker:[m
         GPIO.setwarnings(False)[m
         GPIO.cleanup()[m
 [m
[31m-        DIR_1 = 13  # DIR+[m
[31m-        STEP_1 = 26  # PULL+[m
[32m+[m[32m        DIR_1 = 25  # DIR+[m
[32m+[m[32m        STEP_1 = 24  # PULL+[m
 [m
         # 0/1 used to signify clockwise or counterclockwise.[m
         CW = direction[m
[36m@@ -208,8 +208,8 @@[m [mclass azimuth_tracker:[m
             GPIO.setwarnings(False)[m
             GPIO.cleanup()[m
 [m
[31m-            DIR_1 = 13  # DIR+[m
[31m-            STEP_1 = 26  # PULL+[m
[32m+[m[32m            DIR_1 = 25  # DIR+[m
[32m+[m[32m            STEP_1 = 24  # PULL+[m
 [m
             # 0/1 used to signify clockwise or counterclockwise.[m
             CW = 1[m
[1mdiff --git a/Mark_IV/Sintering/azimuth_deprecated.py b/Mark_IV/Sintering/azimuth_deprecated.py[m
[1mindex 9378156..317b0f4 100644[m
[1m--- a/Mark_IV/Sintering/azimuth_deprecated.py[m
[1m+++ b/Mark_IV/Sintering/azimuth_deprecated.py[m
[36m@@ -13,8 +13,8 @@[m [mdef track(direction, steps, uvMax, uvUpper, uvLower):[m
     GPIO.setwarnings(False)[m
     GPIO.cleanup()[m
 [m
[31m-    DIR_1 = 13  # DIR+[m
[31m-    STEP_1 = 26  # PULL+[m
[32m+[m[32m    DIR_1 = 25  # DIR+[m
[32m+[m[32m    STEP_1 = 24  # PULL+[m
 [m
     # 0/1 used to signify clockwise or counterclockwise.[m
     CW = direction[m
[1mdiff --git a/Mark_IV/Sintering/elevationTracking.py b/Mark_IV/Sintering/elevationTracking.py[m
[1mindex c9f771d..bf0a828 100644[m
[1m--- a/Mark_IV/Sintering/elevationTracking.py[m
[1m+++ b/Mark_IV/Sintering/elevationTracking.py[m
[36m@@ -111,10 +111,10 @@[m [mclass elevation_tracker:[m
         GPIO.setwarnings(False)[m
 [m
         # Direction pin from controller[m
[31m-        DIR = 25[m
[32m+[m[32m        DIR = 18[m
 [m
         # Step pin from controller[m
[31m-        STEP = 24[m
[32m+[m[32m        STEP = 17[m
 [m
         # 0/1 used to signify clockwise or counterclockwise.[m
         CW = 1[m
